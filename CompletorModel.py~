from PyQt5.QtCore import (
    Qt,
    QVariant
)
from PyQt5.QtGui import QStandardItemModel
from PyQt5.QtCore import QModelIndex

from ItemCompletor import ItemCompletor


class CompletorModel(QStandardItemModel):
    def __init__(self, parent=None):
        super(ItemCompletorModel, self).__init__(parent)

    def addLinePrediction(self, prediction):
        ic = ItemCompletor()
        ic.line = prediction
        self.appendRow(ic)

    def rowCount(self, parent=QModelIndex()):
        return False  # TODO

    def data(self, index, role=Qt.DisplayRole):
        if not index.isValid() or \
           not 0 <= index.row() < self.rowCount():
            return QVariant()

        row = index.row()
        if role == Qt.DisplayRole:
            return 'data'
        return QVariant()
